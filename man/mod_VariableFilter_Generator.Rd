% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_VariableFilter_Generator.R
\name{mod_VariableFilter_Generator}
\alias{mod_VariableFilter_Generator}
\alias{mod_VariableFilter_Generator_ui}
\alias{mod_VariableFilter_Generator_server}
\title{Build Variable Filter function}
\usage{
mod_VariableFilter_Generator_ui(id)

mod_VariableFilter_Generator_server(
  id,
  obj = reactive({
     NULL
 }),
  cname = reactive({
     NULL
 }),
  value = reactive({
     NULL
 }),
  operator = reactive({
     NULL
 }),
  keep_vs_remove = reactive({
     setNames(nm = c("delete", "keep"))
 }),
  remoteReset = reactive({
     0
 }),
  is.enabled = reactive({
     TRUE
 })
)

mod_VariableFilter_Generator(
  obj,
  cname = NULL,
  value = NULL,
  operator = NULL,
  keep_vs_remove = "delete",
  remoteReset = reactive({
     0
 })
)
}
\arguments{
\item{id}{xxx}

\item{obj}{An instance of the class \code{SummarizedExperiment}}

\item{operator}{xxx}

\item{keep_vs_remove}{xxx}

\item{remoteReset}{A \code{Ã¬nteger(1)} xxxx}

\item{is.enabled}{A \code{logical(1)} that indicates whether the module is
enabled or disabled. This is a remote command.}
}
\value{
As for all modules used with \code{MagellanNTK}, the return value is a
\code{list()} of two items:
\itemize{
\item trigger : xxx
\item value: In this case, it contains a list() of three slots:
\itemize{
\item ll.var: a list() of instances of the class \code{VariableFilter},
\item ll.query: a list of \code{character()} which describe the queries in natural
language,
\item ll.widgets.value: a list of the values of widgets.
}
}
}
\description{
This function is a shiny module to create a list of queries (instances of
the class \code{VariableFilter} to filter the quantitative metadata of an instance
of the class \code{SummarizedExperiment}).
This function is written with specifications of the package \code{MagellanNTK} so
as to be easily integrated into workflfow compliant with \code{MagellanNTK}.
}
\examples{
\dontrun{
data(Exp1_R25_prot, package = 'DaparToolshedData')
obj <- Exp1_R25_prot[[1]]
operator = setNames(nm = SymFilteringOperators())
keep_vs_remove <- setNames(nm = c("delete", "keep"))
value = 3
shiny::runApp(mod_VariableFilter_Generator(obj, keep_vs_remove, value, operator))
}

}
